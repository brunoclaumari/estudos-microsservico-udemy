****************DOCKER COMPOSE************************

***Rodar yml do Docker compose
  *Entrar na pasta onde o arquivo 'docker-compose.yml' está e:

	docker-compose up
	docker-compose up -d (subir os containers e desocupar o terminal)
	docker-compose down (Desliga os containers alusivos ao docker compose)

***Verificar status dos conteiners contidos no docker-compose
	docker-compose ps (apenas o docker ps não resolve quando estamos usando um docker-compose.yml)


***DISTRIBUTED TRACING SERVER com Zipkin*****

	docker run -p 9411:9411 openzipkin/zipkin:2.23.2	 [baixar imagem e já rodar o container docker com portas definidas]
	docker pull openzipkin/zipkin:2.23.2 	[se for só baixar a imagem primeiro]

***Conectar Zipkin ao book-service, cambio-service e api-gateway

>>>> Adicionar dependências Maven 

<dependency>
	<groupId>org.springframework.cloud</groupId>
	<artifactId>spring-cloud-sleuth-zipkin</artifactId>
</dependency>
<dependency>
	<groupId>org.springframework.cloud</groupId>
	<artifactId>spring-cloud-starter-sleuth</artifactId>
</dependency>
<dependency>
	<groupId>org.springframework.amqp</groupId>
	<artifactId>spring-rabbit</artifactId>
</dependency>


 >>>> ... e application.yml

spring:
  sleuth:
    sampler:
      probability: 1.0


******************PARA FAZER O BUILD E CRIAR IMAGEM DOCKER******************************************

	1* No arquivo 'pom.xml' do projeto naming-server, dentro da tag '<build>, <plugins>, <plugin>', embaixo do '<artifactId>' adicionar as seguintes tags:

				<configuration>
					<image>
						<name>brunosousa16/${project.artifactId}:${project.version}</name>
					</image>
					<pullPolicy>IF_NOT_PRESENT</pullPolicy>
				</configuration>

	TEM QUE FICAR COMO SEGUE:

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<image>
						<name>brunosousa16/${project.artifactId}:${project.version}</name>
					</image>
					<pullPolicy>IF_NOT_PRESENT</pullPolicy>
				</configuration>
			</plugin>
		</plugins>
	</build>

	1.1*** Fazer build imagem docker do projeto pela janela da IDE

	* botão direito no projeto > Run As > Maven Build
	* em 'Goals' digitar 'spring-boot:build-image -DskipTests' OBS: o -DskipTests não é recomendado para produção
	* 'Apply' e 'Run' > Vai começar a criar a imagem docker do projeto
 	
	1.2*** BUild pelo docker-compose.yml

	* docker-compose up -d
	***************************************************************************

	2* No pom.xml do 'api-gateway, copiar toda a tag build do naming server

	2.1**Fazer build imagem docker do projeto pelo terminal na pasta:

	Botão direito no projeto > Show in local terminal > Terminal [vai abrir um terminal no STS dentro da pasta do projeto]
	--pode ser no Powershell ou no cmd

	*mvn spring-boot:build-image -DskipTests (o -DskipTests não é recomendado para produção)

	2.2*** Build pelo docker-compose.yml

	* docker-compose up -d

	--senha container mysql cambio_service : msBr123
	--senha container mysql book_service : msBr123

	2.3*Para entrar no container mysql

	docker exec -it <nome_do-container> mysql -uroot -p
	docker exec -it exemplo-microsservico-cambio-db-1 mysql -uroot -p

	3* Cambio service com Dockerfile

	3.1* no terminal dentro do projeto, fazer:
	mvn clean package -DskipTests


************Conteiner rabbit mq (tem que usar em caso o zipkin esteja fora) ***************************

	
	1* Adicionar dependência (maven) no cambio-service, book-service e api-gateway


	2* Adicionar o 'depends_on' dentro do docker-compose nos escopos do cambio-service, book-service e api-gateway

    depends_on:
      - rabbit-mq

	*3 Dentro do docker-compose, no escopo do api-gateway, em 'environment' adicionar tbm a variável do rabbit:
	
      RABBIT_URI: amqp://guest:guest@rabbit-mq:5672 
	
	




